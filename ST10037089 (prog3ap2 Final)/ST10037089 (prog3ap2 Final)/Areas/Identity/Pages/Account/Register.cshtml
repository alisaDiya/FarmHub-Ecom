@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Role"></label>
                <select asp-for="Input.Role" class="form-control" onchange="checkRole(this)">
                    <option value="">-- Select Role --</option>
                    @if (Model.Input.Roles != null)
                    {
                        foreach (var role in Model.Input.Roles)
                        {
                            <option value="@role">@role</option>
                        }
                    }
                </select>
                <span asp-validation-for="Input.Role" class="text-danger"></span>
                <p id="roleMessage" class="text-muted"></p>
            </div>

            <script>
                function checkRole(select) {
                    var selectedRole = select.value;
                    var roleMessage = document.getElementById('roleMessage');
                    var roleOptions = select.getElementsByTagName('option');

                    // Restrict Farmer role
                    if (selectedRole === 'Farmer') {
                        roleMessage.innerText = "You can log in as a farmer, but registration as a farmer is not available.";
                        for (var i = 0; i < roleOptions.length; i++) {
                            if (roleOptions[i].value === 'Farmer') {
                                roleOptions[i].disabled = true;
                            }
                        }
                    }
                    // Restrict Employee role
                    else if (selectedRole === 'Employee') {
                        roleMessage.innerText = "You can log in as an employee, but registration as an employee is not available.";
                        for (var i = 0; i < roleOptions.length; i++) {
                            if (roleOptions[i].value === 'Employee') {
                                roleOptions[i].disabled = true;
                            }
                        }
                    }
                    // No restriction for other roles
                    else {
                        roleMessage.innerText = "";
                        for (var i = 0; i < roleOptions.length; i++) {
                            roleOptions[i].disabled = false;
                        }
                    }
                }
            </script>

            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                            about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
